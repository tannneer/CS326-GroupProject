{"version":3,"sources":["getDB.js"],"names":["getPrioritiesFromDB","Task","findAll","attributes","order","Sequelize","literal","tasks","map","task","toJSON","console","error","message","displayPriorities","log","forEach","id","taskName","priority","dueDate","priorities"],"mappings":";;AAAA;;AACA;;;;AAA+B;AAE/B,SAAeA,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAQ4BC,kBAAKC,OAAL,CAAa;AAC7BC,YAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,UAAP,EAAmB,UAAnB,EAA+B,SAA/B,CADiB;AAE7BC,YAAAA,KAAK,EAAE,CACH,CAACC,gBAAUC,OAAV,yQAAD,EAOI,KAPJ,CADG,EASH,CAAC,SAAD,EAAY,KAAZ,CATG;AAFsB,WAAb,CAR5B;;AAAA;AAQcC,UAAAA,KARd;AAAA,2CAuBeA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACC,MAAL,EAAJ;AAAA,WAAd,CAvBf;;AAAA;AAAA;AAAA;AAyBQC,UAAAA,OAAO,CAACC,KAAR,iCAAuC,YAAMC,OAA7C;AAzBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8BA,SAASC,iBAAT,CAA2BP,KAA3B,EAAkC;AAC9B;;;;;;AAMAI,EAAAA,OAAO,CAACI,GAAR,CAAY,oBAAZ;AACAR,EAAAA,KAAK,CAACS,OAAN,CAAc,gBAAyC;AAAA,QAAtCC,EAAsC,QAAtCA,EAAsC;AAAA,QAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,QAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AACnDT,IAAAA,OAAO,CAACI,GAAR,sBAA0BI,QAA1B,eAAuCD,QAAvC,oBAAyDE,OAAzD;AACH,GAFD;AAGH;;AAED,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEgCpB,mBAAmB,EAFnD;;AAAA;AAEaqB,UAAAA,UAFb;AAGOP,UAAAA,iBAAiB,CAACO,UAAD,CAAjB;AAHP;AAAA;;AAAA;AAAA;AAAA;AAKOV,UAAAA,OAAO,CAACC,KAAR;;AALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD","sourcesContent":["import { Sequelize } from \"@sequelize/core\";\r\nimport Task from \"./tasks.js\"; // Assuming tasks.js defines and exports the Task model\r\n\r\nasync function getPrioritiesFromDB() {\r\n    /**\r\n     * Retrieve tasks with their priorities and due dates from the database using Sequelize.\r\n     *\r\n     * Returns:\r\n     *   Promise: Resolves to an array of tasks with their id, name, priority, and due date.\r\n     */\r\n    try {\r\n        const tasks = await Task.findAll({\r\n            attributes: [\"id\", \"taskName\", \"priority\", \"dueDate\"],\r\n            order: [\r\n                [Sequelize.literal(`\r\n                    CASE \r\n                        WHEN priority = '!!!' THEN 1\r\n                        WHEN priority = '!!' THEN 2\r\n                        WHEN priority = '!' THEN 3\r\n                        ELSE 4\r\n                    END\r\n                `), \"ASC\"],\r\n                [\"dueDate\", \"ASC\"]\r\n            ]\r\n        });\r\n\r\n        return tasks.map(task => task.toJSON());\r\n    } catch (error) {\r\n        console.error(`Error fetching tasks: ${error.message}`);\r\n        throw error;\r\n    }\r\n}\r\n\r\nfunction displayPriorities(tasks) {\r\n    /**\r\n     * Display the list of tasks with priorities.\r\n     *\r\n     * Args:\r\n     *   tasks (Array): Array of task objects with id, taskName, priority, and dueDate.\r\n     */\r\n    console.log(\"\\nTask Priorities:\");\r\n    tasks.forEach(({ id, taskName, priority, dueDate }) => {\r\n        console.log(`[Priority: ${priority}] ${taskName} (Due: ${dueDate})`);\r\n    });\r\n}\r\n\r\n(async () => {\r\n    try {\r\n        const priorities = await getPrioritiesFromDB();\r\n        displayPriorities(priorities);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n})();\r\n"],"file":"getDB.dev.js"}