{"version":3,"sources":["getDB.js"],"names":["_core","require","_tasks","_interopRequireDefault","getPrioritiesFromDB","tasks","regeneratorRuntime","async","_context","prev","next","awrap","Task","findAll","attributes","order","Sequelize","literal","sent","abrupt","map","task","toJSON","t0","console","error","concat","message","stop","displayPriorities","log","forEach","_ref","id","taskName","priority","dueDate","_context2"],"mappings":"aAAA,IAAAA,MAAAC,QAAA,mBACAC,OAAAC,uBAAAF,QAAA,uFAEA,SAAeG,sBAAf,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAAAC,OAAAA,QAAAC,QAAA,CAAAC,WAAA,CAAA,KAAA,WAAA,WAAA,WAAAC,MAAA,CAAA,CAAAC,MAAAA,UAAAC,QAAA,yQAkBoB,OAlBpB,CAAA,UAAA,WAAA,KAAA,EAAA,OAAAZ,EAAAG,EAAAU,KAAAV,EAAAW,OAAA,SAAAd,EAAAe,IAAA,SAAAC,GAAA,OAAAA,EAAAC,YAAA,KAAA,EAAA,MAAAd,EAAAC,KAAA,EAAAD,EAAAe,GAAAf,EAAA,MAAA,GAAAgB,QAAAC,MAAA,yBAAAC,OAAAlB,EAAAe,GAAAI,UAAAnB,EAAAe,GAAA,KAAA,GAAA,IAAA,MAAA,OAAAf,EAAAoB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KA8BA,SAASC,kBAAkBxB,GA9B3BmB,QAAAM,IAAA,sBAsCIzB,EAAM0B,QAAQ,SAAAC,GAAyCA,EAAtCC,GAAsC,IAAlCC,EAAkCF,EAAlCE,SAAUC,EAAwBH,EAAxBG,SAAUC,EAAcJ,EAAdI,QAR7CZ,QAASK,IAAT,cAAAH,OAAkCS,EAAlC,MAAAT,OAAkCQ,EAAlC,WAAAR,OAAkCU,EAAlC,QAaC9B,mBAAAC,MAAA,SAAA8B,GAAA,OAAA,OAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,KAAA,EAAA,OAAA2B,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAAAJ,mBAAAK,MAEgCP,uBAFhC,KAAA,EANGoB,kBAMHa,EAAAnB,MAAAmB,EAAA3B,KAAA,GAAA,MAAA,KAAA,EAAA2B,EAAA5B,KAAA,EAAA4B,EAAAd,GAAAc,EAAA,MAAA,GALoBJ,QAAsCR,MAAtCQ,EAAAA,IAKpB,KAAA,GAAA,IAAA,MAAA,OAAAI,EAAAT,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"getDB.min.js","sourcesContent":["import { Sequelize } from \"@sequelize/core\";\r\nimport Task from \"./tasks.js\"; // Assuming tasks.js defines and exports the Task model\r\n\r\nasync function getPrioritiesFromDB() {\r\n    /**\r\n     * Retrieve tasks with their priorities and due dates from the database using Sequelize.\r\n     *\r\n     * Returns:\r\n     *   Promise: Resolves to an array of tasks with their id, name, priority, and due date.\r\n     */\r\n    try {\r\n        const tasks = await Task.findAll({\r\n            attributes: [\"id\", \"taskName\", \"priority\", \"dueDate\"],\r\n            order: [\r\n                [Sequelize.literal(`\r\n                    CASE \r\n                        WHEN priority = '!!!' THEN 1\r\n                        WHEN priority = '!!' THEN 2\r\n                        WHEN priority = '!' THEN 3\r\n                        ELSE 4\r\n                    END\r\n                `), \"ASC\"],\r\n                [\"dueDate\", \"ASC\"]\r\n            ]\r\n        });\r\n\r\n        return tasks.map(task => task.toJSON());\r\n    } catch (error) {\r\n        console.error(`Error fetching tasks: ${error.message}`);\r\n        throw error;\r\n    }\r\n}\r\n\r\nfunction displayPriorities(tasks) {\r\n    /**\r\n     * Display the list of tasks with priorities.\r\n     *\r\n     * Args:\r\n     *   tasks (Array): Array of task objects with id, taskName, priority, and dueDate.\r\n     */\r\n    console.log(\"\\nTask Priorities:\");\r\n    tasks.forEach(({ id, taskName, priority, dueDate }) => {\r\n        console.log(`[Priority: ${priority}] ${taskName} (Due: ${dueDate})`);\r\n    });\r\n}\r\n\r\n(async () => {\r\n    try {\r\n        const priorities = await getPrioritiesFromDB();\r\n        displayPriorities(priorities);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n})();\r\n"]}